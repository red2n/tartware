# =====================================================
# Tartware PMS - Environment Configuration
# Copy this file to .env and customize as needed
# =====================================================

# =====================================================
# DATABASE INITIALIZATION SETTINGS
# =====================================================

# Drop existing database on startup (⚠️ DELETES ALL DATA)
# Recommended: true for development, false for production
TARTWARE_DROP_EXISTING=true

# Run comprehensive verification after setup
# Recommended: true (ensures database quality)
TARTWARE_RUN_VERIFICATION=true

# Create backup before dropping database
# Recommended: false for dev, true for staging/prod
TARTWARE_BACKUP_BEFORE_DROP=false

# =====================================================
# POSTGRESQL SETTINGS
# =====================================================

# PostgreSQL superuser
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Default database (do not change 'tartware')
POSTGRES_DB=tartware

# =====================================================
# PGADMIN SETTINGS
# =====================================================

# PgAdmin login credentials
PGADMIN_DEFAULT_EMAIL=admin@admin.com
PGADMIN_DEFAULT_PASSWORD=admin

# =====================================================
# PORT MAPPINGS
# =====================================================

# PostgreSQL port (host:container)
POSTGRES_PORT=5432

# PgAdmin port (host:container)
PGADMIN_PORT=5050

# =====================================================
# DEVELOPMENT vs PRODUCTION
# =====================================================

# For DEVELOPMENT (current settings):
# TARTWARE_DROP_EXISTING=true   ← Database recreated each time
# TARTWARE_RUN_VERIFICATION=true
# TARTWARE_BACKUP_BEFORE_DROP=false

# For PRODUCTION (recommended):
# TARTWARE_DROP_EXISTING=false  ← NEVER drop in production
# TARTWARE_RUN_VERIFICATION=true
# TARTWARE_BACKUP_BEFORE_DROP=true

# =====================================================
# NOTES
# =====================================================

# 1. This file should NOT be committed with sensitive data
# 2. Copy to .env and customize: cp .env.example .env
# 3. Add .env to .gitignore
# 4. Use docker-compose.yml to load these variables
